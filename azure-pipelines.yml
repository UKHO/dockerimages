trigger:
  branches:
    include:
      - main
  paths:
    include:
      - linux/*

pr:
  branches:
    include:
      - '*'
  paths:
    include:
      - linux/*

schedules:
  - cron: '0 6 * * 1-5'
    displayName: 'Rebuild images for updates'
    branches:
      include:
        - main
    always: true

variables:
  - name: PoolName
    value: "Mare Nectaris"
  - group: dockerhub


jobs:
  - job: 'build_and_test'
    timeoutInMinutes: 600
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
    dependsOn: lint
    pool: $(PoolName)
    steps:
      - script: docker buildx bake --call build linux --progress=plain
      - script: | 
          image_array=$(docker images --format "\"{{.Repository}}:{{.Tag}}\"" | jq -s)
          echo "##vso[task.setvariable variable=IMAGE_ARRAY]$image_array"
      - ${{ each image in fromJson(variables['IMAGE_ARRAY']) }}
      - task: UkhoSnykScanTask@0
        inputs:
          failOnIssues: false # Fails if any issues are found
          organization: $(SNYK_ORG)
          serviceConnectionEndpoint: $(SNYK_AUTH)
          testType: container
          monitorWhen: never # Do not monitor this scan in the UI
          severityThreshold: low
          dockerImageName: $(image)

  - job: 'publish'
    timeoutInMinutes: 600
    pool: $(PoolName)
    dependsOn:
      - 'lint'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    steps:
      - script: docker login -u $(DOCKER_REGISTRY_USERNAME) -p $(DOCKER_REGISTRY_PASSWORD)     
      - script: docker buildx bake --call build linux --progress=plain --push
