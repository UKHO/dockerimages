subinclude("///build_defs/pleasings//docker")

def docker_images(dockerfiles:list, tags:list=[]):
    targets = []

    tags += [""]

    for dockerfile in dockerfiles:

        directory = dirname(dockerfile)

        lint_target = docker_lint(
            name = f"{directory}_lint",
            dockerfile = dockerfile,
        )

        targets += [lint_target]

        for tag in tags:

            name = directory
            if tag:
                name += f"_{tag}"

            build_target = docker_image(
                name = name,
                srcs = glob([f"{directory}/**"]),
                image = directory,
                version = tag,
                dockerfile = dockerfile,
            )

            targets += [
                build_target,
                f"{build_target}_fqn",
                f"{build_target}_load",
                f"{build_target}_push",
                f"{build_target}_run",
                f"{build_target}_save",
                f"{build_target}_tar",
            ]

    return targets

def docker_lint(name:str, dockerfile:str):
    return gentest(
        name = name,
        # build time
        outs = [f"{name}.sh"],
        srcs = [dockerfile],
        cmd = "echo \"docker run --rm -i hadolint/hadolint < $SRC\" > $OUT",
        # runtime
        no_test_output = True,
        test_cmd = "$TEST",
        data = [dockerfile],
    )
